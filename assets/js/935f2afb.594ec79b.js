"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-groupmeet/docs/intro","docId":"intro"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-groupmeet/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-groupmeet/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-groupmeet/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-groupmeet/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-groupmeet/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"},{"type":"link","label":"User Persona 1: Johnson","href":"/project-groupmeet/docs/requirements/userPersonas","docId":"requirements/userPersonas"}],"href":"/project-groupmeet/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-groupmeet/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-groupmeet/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-groupmeet/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-groupmeet/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"Version Control","href":"/project-groupmeet/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-groupmeet/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"design","href":"/project-groupmeet/docs/system-architecture/design","docId":"system-architecture/design"}],"href":"/project-groupmeet/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design Document - Part II API","href":"/project-groupmeet/docs/api-specification/design-api-intro","docId":"api-specification/design-api-intro"},{"type":"link","label":"API 1 - Swagger Petstore","href":"/project-groupmeet/docs/api-specification/openapi-spec","docId":"api-specification/openapi-spec"},{"type":"link","label":"CalculatorModel.java","href":"/project-groupmeet/docs/api-specification/calculator-model-generated","docId":"api-specification/calculator-model-generated"}],"href":"/project-groupmeet/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-groupmeet/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"Integration tests","href":"/project-groupmeet/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-groupmeet/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"}],"href":"/project-groupmeet/docs/category/test-procedures"}]},"docs":{"api-specification/calculator-model-generated":{"id":"api-specification/calculator-model-generated","title":"CalculatorModel.java","description":"(generated using Javadoc to Markdown)","sidebar":"docsSidebar"},"api-specification/design-api-intro":{"id":"api-specification/design-api-intro","title":"Design Document - Part II API","description":"What should be in this section.","sidebar":"docsSidebar"},"api-specification/openapi-spec":{"id":"api-specification/openapi-spec","title":"API 1 - Swagger Petstore","description":"API Specification from openapi.yml","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"Version Control","description":"","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional Requirements","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"1. A smartphone (iOS or Android)","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"System Block Diagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"This document proposes a multi-platform mobile application called \u201cGroupMeet\u201d that creates an environment for students and social groups to easily organize each other\u2019s schedules for availability and share contact information. In academic group projects, students can now easily begin communications with each other and align each other\u2019s schedules to immediately become successful in their academic endeavors. In social groups, friends can now easily coordinate each other\u2019s busy lives and adjust accordingly to spontaneous events. With this application, no particular individual must take charge; the responsibility lies on the application itself.","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"1. Students gather together after being assigned a group project.","sidebar":"docsSidebar"},"requirements/userPersonas":{"id":"requirements/userPersonas","title":"User Persona 1: Johnson","description":"Johnson, a student at Temple University studying Math, will like to meet with select students from his class to form a group to study with for the upcoming finals. He normally has a hard time keeping up with his own schedule, much less remembering others. For the next class, he got 5 minutes of everyone\u2019s time and recommended they use the GroupMeet App. On this application, he explained that everyone will be able to sign in and create/join a group using a code. In this group, everyone will have access to a Calendar in which they can place their availability. The Calendar will then sync everyone\u2019s submission and portray the availability of when everyone would be free to meet.","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"design","description":"Purpose","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"For each method, one or more test cases.","sidebar":"docsSidebar"}}}')}}]);